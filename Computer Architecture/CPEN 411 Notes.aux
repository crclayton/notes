\relax 
\providecommand\@newglossary[4]{}
\@newglossary{main}{glg}{gls}{glo}
\providecommand\@gls@reference[3]{}
\@writefile{toc}{\contentsline {section}{\numberline {1}Fundamentals of Computer Design}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Tasks of the Computer Designer}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Make the Common Case Fast}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}Take Advantage of Parallelism}{1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.3}Principle of Locality}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.4}Amdahl's Law}{2}}
\@writefile{equ}{\contentsline {myequations}{\numberline {1}Amdahl's Law}{2}}
\@writefile{equ}{\contentsline {myequations}{\numberline {2}Maximum speedup}{2}}
\@writefile{equ}{\contentsline {myequations}{\numberline {3}Amdahl's Law with Multiple Optimizations}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.5}The Iron Law of Processor Performance}{3}}
\@writefile{equ}{\contentsline {myequations}{\numberline {4}Iron Law of Processor Performance (Execution time)}{3}}
\@writefile{equ}{\contentsline {myequations}{\numberline {5}CPU Time}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Computer Performance}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}How to Measure CPI}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Performance simulator}}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2}Metrics of Performance}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3}Evaluating Performance}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.4}Comparing and Summarizing Performance}{6}}
\@writefile{equ}{\contentsline {myequations}{\numberline {8}Geometric mean}{6}}
\@writefile{equ}{\contentsline {myequations}{\numberline {9}Harmonic mean}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Arithmetic Mean vs. Geometric Mean}}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.5}Power}{8}}
\@writefile{equ}{\contentsline {myequations}{\numberline {10}Dynamic power losses}{8}}
\@writefile{equ}{\contentsline {myequations}{\numberline {11}Dynamic energy losses}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Integrated Circuits Cost}{9}}
\@writefile{equ}{\contentsline {myequations}{\numberline {12}IC Cost}{10}}
\@writefile{equ}{\contentsline {myequations}{\numberline {13}Die cost}{10}}
\@writefile{equ}{\contentsline {myequations}{\numberline {14}Dies per wafer}{10}}
\@writefile{equ}{\contentsline {myequations}{\numberline {15}Die yield}{10}}
\@writefile{equ}{\contentsline {myequations}{\numberline {16}Testing cost}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Technology Trends}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5}Levels of Representation}{12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.5.1}Fundamental Execution Cycle}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.6}MIPS}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Instruction Cycle}}{13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.1}Example MIPS64 Instructions}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Example MIPS ALU Instructions}}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Example MIPS Load/Store Instructions}}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.2}Branches}{14}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces MIPS Control Flow Instructions}}{14}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.3}Instruction Encoding}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces R-type encoding}}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces I-type encoding}}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces J-type encoding}}{15}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.4}Registers}{16}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.5}Memory}{16}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.6}Elements of an ISA}{16}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.7}ISA Classes}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces ISA Classes}}{18}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.8}Memory Addressing}{18}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.9}Memory Alignment}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Big vs. Little Endian}}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Memory Alignment}}{19}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Pipelining}{21}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Steps in Instruction Processing}{21}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Instruction Fetch}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Instruction Fetch}}{22}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}R-type ALU}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces ALU}}{22}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Loads and Stores/Memory}{23}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Data Memory}}{23}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.4}Conditional Branches}{23}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Conditional Branches}}{24}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Putting it all Together}{24}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Combining the ALU and the Load/Store}{24}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces ALU and Load/Store}}{24}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Combining with Branch/Jumps}{25}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces ALU and Load/Store}}{25}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.3}A Full Single-Cycle MIPS64}{25}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Single-Cycle MIPS64}}{26}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Actual Pipelining}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Pipelining Analogy}}{27}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}Example -- Floating Point Multiplier}{27}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Unpipelined Floating-Point Multiplier}}{28}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Pipelined Floating-Point Multiplier}}{28}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Desirable Traits of Pipelining}{29}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Pipelining MIPS}{29}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Pipelining MIPS}}{30}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Pipelining MIPS with Registers and Control Signals}}{30}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.1}Hazards}{31}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces MIPS Pipelining Hazards}}{31}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}Dependencies}{33}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.6.1}True Dependency}{33}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.6.2}Name Dependency}{33}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.6.3}Output Dependency}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}Multicycle Operations}{35}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Multicycle Operations}}{36}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8}Pipelined Function Units}{36}}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces Multicycle Operations}}{36}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.8.1}In-order Scoreboard for Multicycle Pipelines}{37}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {2.8.1.1}Algorithm}{37}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Out-of-Order Execution}{38}}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces Head of the line blocking}}{38}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Decode Instruction}{38}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Scoreboards}{39}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}Scoreboard Algorithm}{39}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}Scoreboard Components}{39}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Register-Renaming}{40}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Tomasulo algorithm}{40}}
\@writefile{toc}{\contentsline {section}{\numberline {5}In-order commit and multiple issue}{41}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Exceptions}{41}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.1}In-order pipeline}{41}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.1.2}Out-of-order commit}{42}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Speculative Execution}{42}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Completion and commit}{43}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {5.3.1}Reorder Buffer (ROB)}{43}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces Reorder Buffer}}{43}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Instruction Set Architecture (ISA)}{44}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.1}Classifications of ISAs}{44}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.1}Internal Storage}{44}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {6.1.2}Number of Operands}{45}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2}Memory Addressing}{45}}
\@writefile{equ}{\contentsline {myequations}{\numberline {17}Memory Alignment}{45}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.3}Addressing Modes}{45}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces MIPS Addressing modes}}{46}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.4}Control Flow}{46}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.5}Encoding an Instruction Set}{46}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.6}MIPS}{47}}
\@writefile{toc}{\contentsline {section}{\numberline {7}Pipelining}{47}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1}Classic 5-Stage Pipeline for a RISC Processor}{47}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces MIPS Pipelining Hazards}}{48}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2}Pipeline Hazards}{49}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.1}Forwarding}{49}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.2.2}Branch Hazards}{50}}
\@writefile{equ}{\contentsline {myequations}{\numberline {18}Pipeline Speedup of branch schemes}{50}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3}Pipeline Control}{51}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4}Exceptions}{51}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5}Multicycle Operations}{52}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces Multicycle Operations}}{53}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.5.1}Hazards and Forwarding in Longer Latency Pipelines}{53}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.5.2}Maintaining Precise Exceptions}{54}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.6}Dynamically Scheduled Pipelines}{55}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {7.6.1}Scoreboard}{55}}
\@writefile{toc}{\contentsline {section}{\numberline {8}Instruction-Level Parallelism}{57}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.1}Advanced Branch Prediction}{57}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.2}Dynamic Scheduling using Tomasulo's Algorithm}{58}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {8.2.1}Register-renaming}{58}}
\@writefile{toc}{\contentsline {subsection}{\numberline {8.3}Hardware-Based Speculation}{61}}
\@writefile{toc}{\contentsline {section}{\numberline {9}Caches}{63}}
\@writefile{lof}{\contentsline {figure}{\numberline {27}{\ignorespaces Caches in an Intel Broadwell}}{63}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.1}Available Technologies}{64}}
\@writefile{lof}{\contentsline {figure}{\numberline {28}{\ignorespaces Cache Hierarchy}}{65}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.2}What to Keep in a Cache}{65}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.1}Temporal Locality}{66}}
\@writefile{lof}{\contentsline {figure}{\numberline {29}{\ignorespaces Fully Associative Cache}}{67}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.2}Spatial Locality}{68}}
\@writefile{lof}{\contentsline {figure}{\numberline {30}{\ignorespaces Block Offset}}{69}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.3}Direct Mapped Cache}{70}}
\@writefile{equ}{\contentsline {myequations}{\numberline {19}Directly Mapped Cache Index}{70}}
\@writefile{lof}{\contentsline {figure}{\numberline {31}{\ignorespaces Direct Mapped Cache}}{70}}
\@writefile{lof}{\contentsline {figure}{\numberline {32}{\ignorespaces Offset, Index, and Tag of a Direct Mapped Cache}}{71}}
\@writefile{lof}{\contentsline {figure}{\numberline {33}{\ignorespaces Direct Mapped Cache Hardware Implementation}}{72}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.4}Set-Associative Cache}{72}}
\@writefile{lof}{\contentsline {figure}{\numberline {34}{\ignorespaces Set-Associative Cache}}{73}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.5}Reuse Distance}{75}}
\@writefile{equ}{\contentsline {myequations}{\numberline {20}Reuse distance}{76}}
\@writefile{lof}{\contentsline {figure}{\numberline {35}{\ignorespaces Reuse Distance}}{76}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.6}Replacement Policy}{76}}
\@writefile{lof}{\contentsline {figure}{\numberline {36}{\ignorespaces Latency of Difference Cache Levels}}{77}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {9.2.7}Cache Misses}{78}}
\@writefile{lof}{\contentsline {figure}{\numberline {37}{\ignorespaces The Effect of Cache Size on the Miss Rate}}{79}}
\@writefile{lof}{\contentsline {figure}{\numberline {38}{\ignorespaces The Effect of Cache Block Size on the Miss Rate}}{79}}
\@writefile{toc}{\contentsline {subsection}{\numberline {9.3}Cache Performance Impact}{80}}
\@writefile{toc}{\contentsline {section}{\numberline {10}Virtual Memory}{83}}
\@writefile{lof}{\contentsline {figure}{\numberline {39}{\ignorespaces Virtual Memory Mapping}}{84}}
\@writefile{lof}{\contentsline {figure}{\numberline {40}{\ignorespaces Page Table Translation Structure}}{84}}
\@writefile{lof}{\contentsline {figure}{\numberline {41}{\ignorespaces Multi-level Page Tables}}{85}}
\@writefile{lof}{\contentsline {figure}{\numberline {42}{\ignorespaces Multi-level Page Tables}}{86}}
\@writefile{lof}{\contentsline {figure}{\numberline {43}{\ignorespaces Memory Access Translation Flowchart}}{87}}
\@writefile{toc}{\contentsline {section}{\numberline {11}Memory Technologies}{88}}
\@writefile{toc}{\contentsline {subsection}{\numberline {11.1}Random Access Addressing}{88}}
\@writefile{lof}{\contentsline {figure}{\numberline {44}{\ignorespaces RAM Data Array}}{89}}
\newlabel{fig:RAM}{{44}{89}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {11.1.1}SRAM}{89}}
\@writefile{lof}{\contentsline {figure}{\numberline {45}{\ignorespaces SRAM Cell}}{90}}
\@writefile{lof}{\contentsline {figure}{\numberline {46}{\ignorespaces Multiport SRAM Cell}}{90}}
\@writefile{lof}{\contentsline {figure}{\numberline {47}{\ignorespaces RF Cell}}{91}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {11.1.2}DRAM}{91}}
\@writefile{lof}{\contentsline {figure}{\numberline {48}{\ignorespaces DRAM Cell}}{91}}
\@writefile{toc}{\contentsline {subsection}{\numberline {11.2}Associative Lookup Addressing}{92}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {11.2.1}CAM}{92}}
\@writefile{lof}{\contentsline {figure}{\numberline {49}{\ignorespaces CAM Cell}}{93}}
\@writefile{lof}{\contentsline {figure}{\numberline {50}{\ignorespaces CAM Structure}}{93}}
\@writefile{toc}{\contentsline {section}{\numberline {12}Memory Consistency}{93}}
\@writefile{lof}{\contentsline {figure}{\numberline {51}{\ignorespaces Flags between threads}}{94}}
\newlabel{Flag}{{51}{94}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.1}Memory Consistency Model}{94}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {12.1.1}Sequential Consistency (SC)}{95}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.2}Weak Ordering (WO)}{96}}
\@writefile{lof}{\contentsline {figure}{\numberline {52}{\ignorespaces Flags between threads}}{97}}
\newlabel{Flag2}{{52}{97}}
\@writefile{lof}{\contentsline {figure}{\numberline {53}{\ignorespaces Fence operations}}{97}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.3}Release Consistency (RC)}{97}}
\@writefile{lof}{\contentsline {figure}{\numberline {54}{\ignorespaces Release consistency fence operations}}{98}}
\@writefile{lof}{\contentsline {figure}{\numberline {55}{\ignorespaces SC, WO, and RC reordering diagrams}}{98}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.4}Total Store Ordering (TSO)}{99}}
\@writefile{toc}{\contentsline {subsection}{\numberline {12.5}Store Atomicity}{99}}
\@writefile{lof}{\contentsline {figure}{\numberline {56}{\ignorespaces Store Atomicity}}{99}}
\newlabel{Atom}{{56}{99}}
\@writefile{toc}{\contentsline {section}{\numberline {13}Coherence}{99}}
\@writefile{toc}{\contentsline {subsection}{\numberline {13.1}Modified, Shared, Invalid (MSI) Protocol}{100}}
\@writefile{lof}{\contentsline {figure}{\numberline {57}{\ignorespaces Cache Controller}}{100}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces MSI Protocol States}}{101}}
\@writefile{lof}{\contentsline {figure}{\numberline {58}{\ignorespaces MSI Protocol State Machine}}{102}}
\newlabel{MSI}{{58}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {13.2}Directories}{102}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {13.2.1}Directory MSI Protocol}{103}}
\@writefile{toc}{\contentsline {section}{\numberline {14}VLIW and SIMD}{104}}
\@writefile{lof}{\contentsline {figure}{\numberline {59}{\ignorespaces Flynn's Taxonomy}}{104}}
\@writefile{toc}{\contentsline {subsection}{\numberline {14.1}Very Long Instruction Word (VLIW)}{105}}
\@writefile{lof}{\contentsline {figure}{\numberline {60}{\ignorespaces VLIW}}{106}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.1.1}Loop Unrolling}{106}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.1.2}Register Renaming}{107}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.1.3}Software Pipelining/Instruction Reorder}{107}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.1.4}Limitations}{108}}
\@writefile{lof}{\contentsline {figure}{\numberline {61}{\ignorespaces VLIW Scheduling}}{109}}
\@writefile{toc}{\contentsline {subsection}{\numberline {14.2}SIMD Instruction Encoding}{109}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.2.1}Spatial SIMD -- Array Processor}{110}}
\@writefile{lof}{\contentsline {figure}{\numberline {62}{\ignorespaces Spatial SIMD}}{110}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.2.2}Temporal SIMD -- Vector Processor}{110}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {14.2.3}Problems with SIMD}{110}}
\@writefile{lof}{\contentsline {figure}{\numberline {63}{\ignorespaces Temporal SIMD}}{111}}
\@writefile{toc}{\contentsline {section}{\numberline {15}GPUs}{112}}
\@writefile{lof}{\contentsline {figure}{\numberline {64}{\ignorespaces GPU vs. GPU Area}}{112}}
\@writefile{lof}{\contentsline {figure}{\numberline {65}{\ignorespaces VLIW}}{113}}
\@writefile{lof}{\contentsline {figure}{\numberline {66}{\ignorespaces SIMD}}{113}}
\@writefile{lof}{\contentsline {figure}{\numberline {67}{\ignorespaces SIMT}}{114}}
\@writefile{toc}{\contentsline {subsection}{\numberline {15.1}Warps}{115}}
\@writefile{lof}{\contentsline {figure}{\numberline {68}{\ignorespaces Warps}}{115}}
\@writefile{lof}{\contentsline {figure}{\numberline {69}{\ignorespaces Warp Registers}}{116}}
\@writefile{toc}{\contentsline {subsection}{\numberline {15.2}Challenges}{116}}
\@writefile{toc}{\contentsline {subsection}{\numberline {15.3}Architecture}{117}}
\@writefile{lof}{\contentsline {figure}{\numberline {70}{\ignorespaces Generic GPU Architecture}}{117}}
\@writefile{lof}{\contentsline {figure}{\numberline {71}{\ignorespaces Generic GPU Core Elements}}{117}}
\@writefile{lof}{\contentsline {figure}{\numberline {72}{\ignorespaces Inside an NVidia-style GPU Core}}{118}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.1}Fetch and Decode}{118}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.2}Instruction Issue}{119}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.3}Branch Divergence}{119}}
\@writefile{lof}{\contentsline {figure}{\numberline {73}{\ignorespaces Reconvergence Stack}}{120}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.4}GPU Register Files}{121}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.5}Operand Collector}{122}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.6}Scalar Registers and Execution Units}{122}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {15.3.7}GPU Memory Systems}{122}}
\bibdata{references}
\bibstyle{apacite}
\@writefile{toc}{\contentsline {section}{Appendix}{124}}
\@writefile{toc}{\contentsline {subsection}{\numberline {A}Tutorial 1}{124}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {A.1}Amdahl's Law}{124}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {A.1.1}Assuming 80\% of a program could be parallelized perfectly (executing on N cores, speedup is N). If you have a 32-core computer, what's the speedup you could get compared with the single core machine? If you have infinite number of cores, what's the maximum speedup?}{124}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {A.1.2}Ben Bitdiddle believes he can improve program in problem 1 by building an \csqQQ {34}asymmetric\csqQQ {34} multicore processor that combines several “normal” cores with complex \csqQQ {34}supercores\csqQQ {34} that are 4X larger but also 2X faster. His overall chip design contains one supercore and 12 normal cores, and is area-equivalent to 16 normal cores. What's the maximum speedup Ben can achieve? $ \\ Fraction_{serial} = 0.8 \\ SU_{serial} = 2 \\ Fraction_{parallel} = 0.8 \\ SU_{parallel} = 14$}{124}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {A.1.3}Assuming in a program, memory operations currently take 30\% of execution time. A new widget called \csqQQ {34}cache\csqQQ {34} speeds up 80\% memory operations by a factor of 4. A second new widget called \csqQQ {34}L2 cache\csqQQ {34} speeds up the remaining memory operations by a factor of 2. After applying both of these two widgets, what's the total speedup?}{125}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {A.2}Iron Law}{125}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {A.2.1}After you profile a program running on a computer system, you find that 35\% instructions are memory operations, 55\% are ALU operations and 10\% are branch instructions. The number of cycles these three kinds of instructions need are 10, 7 and 5 respectively. Please calculate the CPI of this program.}{125}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {A.2.2} Just assuming that we can do two optimizations for the system of problem A.2.1. (a) A better compiler could be used to reduce the number of instructions by 15\%. (b) A higher-performance CPU could be used to reduce the number of cycles for ALU operations to 5. Moreover, clock cycle time is reduced by 10\%. Which kind of optimization has shorter execution time?}{126}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B}Tutorial 2}{127}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {B.1}Costs}{127}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {B.1.1}You will be selling a range of chips from your factory, and you need to decide how much capacity to dedicate to each chip. Your Woods chip will be 150$\mathbf  {mm^2}$ and will make a profit of \$20 per defect-free chip. Your Markon chip will be 250$\mathbf  {mm^2}$ and will make a profit of \$25 per defect-free chip. Each wafer has a 300 mm diameter and an estimated defect rate of .30 per $\mathbf  {cm^2}$. Alpha = 4 \\ \\(1) What profit do you make on each wafer of Woods chip? \\(2) What profit do you make on each wafer of Markon chip? \\(3) Which chip should you produce in this facility? \\(4) If your demand is 50,000 Woods chips per month and 25,000 Markon chips per month, and your facility can fabricate 150 wafers a month, how many wafers should you make of each chip?}{127}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {B.1.2}An engineer at AMD suggests that, since the yield of Opteron processor chips is so poor, you might make chips more cheaply if you placed an extra core on the die and only threw out chips on which both processors had failed. We will solve this exercise by viewing the yield as a probability of no defects occurring in a certain area given the defect rate. Calculate probabilities based on each Opteron core separately (this may not be entirely accurate, since the yield equation is based on empirical evidence rather than a mathematical calculation relating the probabilities of finding errors in different portions of the chip). The die size is 199$\mathbf  {mm^2}$ and estimated defect rate is .75/$\mathbf  {cm^2}$.\\ \\ (1) What is the probability that a defect will occur on no more than one of the two processor cores? \\ (2) If the old chip cost \$20 dollars per chip, what will the cost be of the new chip, taking into account the new area and yield?}{128}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {B.1.3}Your company's internal studies show that a single-core system is sufficient for the demand on your processing power; however, you are exploring whether you could save power by using dual cores. \\(1) Assume your application is 80\% parallelizable. By how much could you decrease the frequency and get the same performance? \\(2) Assume that the voltage may be decreased linearly with the frequency. How much dynamic power would the dual-core system require as compared to the single-core system?}{129}}
\@writefile{toc}{\contentsline {subsection}{\numberline {C}Tutorial 3}{130}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {C.1}ISA}{130}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {C.1.1}For the following assume the values A, B, C, D and E reside in memory. Also assume that instruction operation codes are represented in 8-bits, memory addresses are 64-bits and register addresses are 6-bits. For each instruction set architecture: Stack, Accumulator, Register-Memory, Load/Store, how many addresses, or names, appear for each instruction for the code to compute C=A+B, and what is the total code size?}{130}}
\@writefile{toc}{\contentsline {paragraph}{\numberline {C.1.2}Invent your own assembly language mnemonics, and for each architecture (stack, accumulator, reg-mem, reg-reg) write the best equivalent assembly code for this high-level language code sequence: A=B+C; B=A+C; D=A-B;}{131}}
